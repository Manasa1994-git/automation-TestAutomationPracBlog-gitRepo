<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Macbook" failures="1" tests="10" name="testcases.TestNGexamples.LearningTestNGSampleTest" time="0.016" errors="0" timestamp="2025-05-18T21:03:54 IST" skipped="1">
  <testcase classname="testcases.TestNGexamples.LearningTestNGSampleTest" name="loginWithMultipleUsers" time="0.001">
    <system-out>
      <![CDATA[Testing login with user: user2]]>
    </system-out>
  </testcase> <!-- loginWithMultipleUsers -->
  <testcase classname="testcases.TestNGexamples.LearningTestNGSampleTest" name="loginWithMultipleUsers" time="0.001">
    <system-out>
      <![CDATA[Testing login with user: user1]]>
    </system-out>
  </testcase> <!-- loginWithMultipleUsers -->
  <testcase classname="testcases.TestNGexamples.LearningTestNGSampleTest" name="alwaysRunExample" time="0.003">
    <system-out>
      <![CDATA[This test always runs even if dependent methods fail]]>
    </system-out>
  </testcase> <!-- alwaysRunExample -->
  <testcase classname="testcases.TestNGexamples.LearningTestNGSampleTest" name="loginWithMultipleUsers" time="0.003">
    <system-out>
      <![CDATA[Testing login with user: user3]]>
    </system-out>
  </testcase> <!-- loginWithMultipleUsers -->
  <testcase classname="testcases.TestNGexamples.LearningTestNGSampleTest" name="testBasic" time="0.001">
    <system-out>
      <![CDATA[Running Basic Test]]>
    </system-out>
  </testcase> <!-- testBasic -->
  <testcase classname="testcases.TestNGexamples.LearningTestNGSampleTest" name="skippedTest" time="0.001">
    <skipped/>
    <system-out>
      <![CDATA[This test will be skipped manually]]>
    </system-out>
  </testcase> <!-- skippedTest -->
  <testcase classname="testcases.TestNGexamples.LearningTestNGSampleTest" name="browserTest" time="0.001">
    <system-out>
      <![CDATA[Browser received from testng.xml: chrome]]>
    </system-out>
  </testcase> <!-- browserTest -->
  <testcase classname="testcases.TestNGexamples.LearningTestNGSampleTest" name="softAssertExample" time="0.003">
    <failure message="The following asserts failed:
	Case mismatch expected [hello] but found [Hello],
	Expected condition failed expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: The following asserts failed:
Case mismatch expected [hello] but found [Hello],
Expected condition failed expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at testcases.TestNGexamples.LearningTestNGSampleTest.softAssertExample(LearningTestNGSampleTest.java:86)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
    <system-out>
      <![CDATA[SoftAssert Example Test]]>
    </system-out>
  </testcase> <!-- softAssertExample -->
  <testcase classname="testcases.TestNGexamples.LearningTestNGSampleTest" name="loginTest" time="0.002">
    <system-out>
      <![CDATA[Login Test]]>
    </system-out>
  </testcase> <!-- loginTest -->
  <testcase classname="testcases.TestNGexamples.LearningTestNGSampleTest" name="dashboardTest" time="0.000">
    <system-out>
      <![CDATA[Dashboard Test - depends on loginTest]]>
    </system-out>
  </testcase> <!-- dashboardTest -->
  <system-out>
    <![CDATA[Before Suite: Setup DB connection or report config
Before Test: Launch browser
Before Class: Login or test-level setup
Before Method: Navigate to base URL or reset test state
This test always runs even if dependent methods fail
After Method: Logout or cleanup
Before Method: Navigate to base URL or reset test state
Browser received from testng.xml: chrome
After Method: Logout or cleanup
Before Method: Navigate to base URL or reset test state
Testing login with user: user1
After Method: Logout or cleanup
Before Method: Navigate to base URL or reset test state
Testing login with user: user2
After Method: Logout or cleanup
Before Method: Navigate to base URL or reset test state
Testing login with user: user3
After Method: Logout or cleanup
Before Method: Navigate to base URL or reset test state
This test will be skipped manually
After Method: Logout or cleanup
Before Method: Navigate to base URL or reset test state
SoftAssert Example Test
After Method: Logout or cleanup
Before Method: Navigate to base URL or reset test state
Running Basic Test
After Method: Logout or cleanup
Before Method: Navigate to base URL or reset test state
Login Test
After Method: Logout or cleanup
Before Method: Navigate to base URL or reset test state
Dashboard Test - depends on loginTest
After Method: Logout or cleanup
After Class: Close browser or session
After Test: Archive logs
After Suite: Tear down DB connection or send email]]>
  </system-out>
</testsuite> <!-- testcases.TestNGexamples.LearningTestNGSampleTest -->
